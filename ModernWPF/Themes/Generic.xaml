<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:ModernWPF"
	xmlns:ctrl="clr-namespace:ModernWPF.Controls"
    >

    <Style TargetType="ctrl:ModernContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:ModernContentControl">
                    <Border x:Name="root">
                        <ContentPresenter x:Name="PART_Content" 
                                          Cursor="{TemplateBinding Cursor}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.100" To="AfterLoaded">
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:BorderWindow">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:BorderWindow">
                    <Border Padding="{TemplateBinding BorderThickness}" Background="#01000000">
                        <Grid>
                            <Border x:Name="lineBorder" Margin="-1" BorderThickness="1">
                            </Border>
                            <Border x:Name="lineBorder2" Margin="-1" BorderThickness="1">
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsContentActive" Value="True">
                            <!--use 2 borders to make it darker on active-->
                            <Setter TargetName="lineBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            <Setter TargetName="lineBorder" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color}"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="lineBorder2" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}"/>
                            <Setter TargetName="lineBorder2" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth=".5" BlurRadius="8" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush.Color}"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsContentActive" Value="False">
                            <Setter TargetName="lineBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveBorderBrush}"/>
                            <Setter TargetName="lineBorder" Property="Effect" >
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveBorderBrush.Color}"></DropShadowEffect>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="lineBorder2" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:DialogControl">
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:DialogControl">
                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:DialogControlContainer">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource OverlayBackground}"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:DialogControlContainer">
                    <Border Background="{TemplateBinding Background}"
                            KeyboardNavigation.TabNavigation="Cycle"
                            KeyboardNavigation.ControlTabNavigation="Cycle"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            Opacity="0">
                        <ContentPresenter x:Name="PART_Content" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WhateverStates">
                                <VisualState x:Name="IsClosed">
                                    <Storyboard>
                                        <DoubleAnimation To="0" Storyboard.TargetProperty="Opacity" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IsOpen">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.25" To="IsOpen">
                                    </VisualTransition>
                                    <VisualTransition GeneratedDuration="0:0:0.25" To="IsClosed">
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasDialogOpen" Value="True">
                <Setter Property="IsHitTestVisible" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="ctrl:AppButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource AppBarItemBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="10.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:AppButton">
                    <Grid Margin="{TemplateBinding Margin}"
                          Background="#01000000">
                        <StackPanel Orientation="{TemplateBinding Orientation}"
                                    Margin="{TemplateBinding Padding}">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Ellipse StrokeThickness="2" 
                                         Stroke="{DynamicResource AppBarItemForegroundThemeBrush}"
                                         Fill="{TemplateBinding Background}"
                                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                         Margin="2"
                                         x:Name="Circle"/>
                                <Viewbox x:Name="contentSizer" Width="48" Height="48"
                                     VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ContentPresenter x:Name="ContentPresenter" 
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Viewbox>
                            </Grid>
                            <TextBlock Text="{TemplateBinding Text}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Foreground="{DynamicResource AppBarItemForegroundThemeBrush}"
                                       TextWrapping="Wrap"
                                       Margin="2 0"/>
                        </StackPanel>
                        <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="FocusVisualWhite" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisualBlack" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ButtonSize" Value="Small">
                            <Setter TargetName="contentSizer" Property="Width" Value="30"/>
                            <Setter TargetName="contentSizer" Property="Height" Value="30"/>
                            <Setter TargetName="Circle" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="TextSize" Value="Large">
                            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonSize" Value="Large"/>
                                <Condition Property="Orientation" Value="Vertical"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="76"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonSize" Value="Small"/>
                                <Condition Property="Orientation" Value="Vertical"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" Value="50"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AppBarItemPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarItemPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarItemPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
