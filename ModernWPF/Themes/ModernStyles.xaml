<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:ModernWPF"
    xmlns:ctrl="clr-namespace:ModernWPF.Controls"
    xmlns:conv="clr-namespace:ModernWPF.Converters"
    xmlns:resx="clr-namespace:ModernWPF.Resources">

    <conv:IsSmallFontConverter x:Key="IsSmallFont"/>
    <conv:BoolVisibleConverter x:Key="BoolVisible"/>
    <conv:MultiBoolVisibleConverter x:Key="MultiBoolVisible"/>
    <conv:NullEmptyNotVisibleConverter x:Key="NullEmptyNotVisible"/>
    <conv:TextCaseConverter x:Key="TextCase"/>

    <!--text-->
    <Style x:Key="ModernTextBlock" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=FontSize, Converter={StaticResource IsSmallFont}}"
						 Value="True">
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MarlettGlyph" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="ModernLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}"></Setter>
    </Style>

    <!--buttons-->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="3">
                            <ContentPresenter x:Name="ContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualWhite" Value="1" />
                            <Setter Property="Opacity" TargetName="FocusVisualBlack" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDefault" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernButtonNoChrome" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Opacity" Value=".8"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="3">
                            <ContentPresenter x:Name="ContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualWhite" Value="1" />
                            <Setter Property="Opacity" TargetName="FocusVisualBlack" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="3">
                            <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualWhite" Value="1" />
                            <Setter Property="Opacity" TargetName="FocusVisualBlack" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonPointerOverBackgroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonDisabledBorderThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonDisabledForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedBorderThemeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedPointerOverBorderThemeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedPressedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedPressedBorderThemeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonDisabledBorderThemeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernRadioButton" TargetType="RadioButton">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonContentForegroundThemeBrush}"/>
        <Setter Property="Padding" Value="1,4,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="29" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid VerticalAlignment="Center">
                                <Ellipse x:Name="BackgroundEllipse"
                                     Width="23"
                                     Height="23"
                                     UseLayoutRounding="False"
                                     Fill="{DynamicResource RadioButtonBackgroundThemeBrush}"
                                     Stroke="{DynamicResource RadioButtonBorderThemeBrush}"
                                     StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}" />
                                <Ellipse x:Name="CheckGlyph"
                                     Width="13"
                                     Height="13"
                                     UseLayoutRounding="False"
                                     Opacity="0"
                                     Fill="{DynamicResource RadioButtonForegroundThemeBrush}" />
                                <Rectangle x:Name="FocusVisualWhite"
                                       Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       Width="29"
                                       Height="29" />
                                <Rectangle x:Name="FocusVisualBlack"
                                       Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       Width="29"
                                       Height="29" />
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Column="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisualWhite" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisualBlack" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonPointerOverBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonPointerOverBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonPointerOverForegroundThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonPressedBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonPressedBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonPressedForegroundThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonDisabledBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonDisabledBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource RadioButtonContentDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernRepeatButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonForegroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource RepeatButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="12,4,12,5" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="3">
                            <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
                               IsHitTestVisible="False"
                               Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                               StrokeEndLineCap="Square"
                               StrokeDashArray="1,1"
                               Opacity="0"
                               StrokeDashOffset="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualWhite" Value="1" />
                            <Setter Property="Opacity" TargetName="FocusVisualBlack" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonDisabledBorderThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ModernCaptionButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ActiveCaptionForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="local:Chrome.IsHitTestVisible" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="9 6" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" 
							Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
							Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ButtonContent" RecognizesAccessKey="False"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToolHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToolHoverBorder}"/>
                <Setter Property="Foreground" Value="{DynamicResource ToolHoverForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToolActiveBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToolActiveBorder}"/>
                <Setter Property="Foreground" Value="{DynamicResource ToolActiveForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernControlButton" TargetType="Button" BasedOn="{StaticResource ModernCaptionButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--window-->
    <Style x:Key="ModernWindow" TargetType="Window">
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="local:Chrome.Chrome">
            <Setter.Value>
                <local:Chrome x:Name="chrome" 
                       ActiveBorderBrush="{DynamicResource ModernAccent}"
                       InactiveBorderBrush="{DynamicResource ModernForeground4}"
                       ActiveCaptionForeground="{DynamicResource ActiveCaptionForeground}"
                       InactiveCaptionForeground="{DynamicResource InactiveCaptionForeground}"
                       />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">

                            <Rectangle x:Name="PART_Caption" 
                                       HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                       Grid.ColumnSpan="2" 
                                       Height="{Binding Path=(local:Chrome.Chrome).CaptionHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                       ></Rectangle>

                            <ctrl:ModernContentControl Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"></ctrl:ModernContentControl>

                            <Grid x:Name="PART_Control" VerticalAlignment="Top">
                                <Grid.Resources>
                                    <local:WindowCommands x:Key="WindowCommands"></local:WindowCommands>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <DockPanel>
                                    <Image Source="{TemplateBinding Icon}" Width="24" Height="24"
                                           Margin="8 4 0 4" VerticalAlignment="Center"
                                           Visibility="{Binding Path=(local:Chrome.Chrome).ShowCaptionIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisible}}"
                                           DockPanel.Dock="Left"></Image>

                                    <TextBlock x:Name="PART_WindowTitle" Text="{TemplateBinding Title}" 
                                               VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                                               HorizontalAlignment="Left"
                                               FontSize="15" Margin="{DynamicResource ContentThemePadding}"
                                               Style="{StaticResource ModernTextBlock}"
                                               Visibility="{Binding Path=(local:Chrome.Chrome).ShowCaptionText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisible}}"></TextBlock>
                                </DockPanel>


                                <!--<ContentControl Content="{TemplateBinding Content}" Grid.Column="1" />-->

                                <StackPanel x:Name="ControlBox" Orientation="Horizontal" Grid.Column="2"
                                            VerticalAlignment="Top"  
                                            DataContext="{Binding Source={StaticResource WindowCommands}}"
                                            Margin="0 -1 -1 0">
                                    <Button x:Name="ButtonMin"
                                            Command="{Binding Path=MinimizeCommand}"
										    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										    ToolTip="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdMinimize], Mode=OneWay}"
                                            Style="{StaticResource ModernControlButton}">
                                        <TextBlock Text="0" Style="{DynamicResource MarlettGlyph}"></TextBlock>

                                    </Button>
                                    <Button x:Name="ButtonMax"
										    Command="{Binding Path=MaximizeCommand}"
										    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										    ToolTip="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdMaximize], Mode=OneWay}"
                                            Style="{StaticResource ModernControlButton}">
                                        <TextBlock Text="1" Style="{DynamicResource MarlettGlyph}"></TextBlock>

                                    </Button>

                                    <Button x:Name="ButtonRestore"
										    Command="{Binding Path=RestoreCommand}"
										    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										    ToolTip="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdRestore], Mode=OneWay}"
                                            Style="{StaticResource ModernControlButton}">
                                        <TextBlock Text="2" Style="{DynamicResource MarlettGlyph}"></TextBlock>

                                    </Button>

                                    <Button x:Name="ButtonClose"
										    Command="{Binding Path=CloseCommand}"
										    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
										    ToolTip="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdClose], Mode=OneWay}"
                                            Style="{StaticResource ModernControlButton}">
                                        <TextBlock Text="r" Style="{DynamicResource MarlettGlyph}"></TextBlock>

                                    </Button>
                                </StackPanel>
                            </Grid>

                            <ResizeGrip x:Name="PART_ResizeGrip" HorizontalAlignment="Right"
									VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />


                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PART_Caption" Property="Fill" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Caption" Property="Fill" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility"
									Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--status-->
    <Style x:Key="ModernStatusBar" TargetType="StatusBar">
        <Setter Property="Padding" Value="4 1"></Setter>
        <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    </Style>

    <Style x:Key="ModernStatusBarItem" TargetType="StatusBarItem">
        <Setter Property="Margin" Value="0 0 20 0" />
    </Style>

    <!--tooltip-->
    <Style x:Key="ModernToolTip" TargetType="ToolTip">
        <Setter Property="Foreground" Value="{DynamicResource ToolTipForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ToolTipBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToolTipBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ToolTipContentThemeFontSize}" />
        <Setter Property="Padding" Value="10,6,10,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="LayoutRoot"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--checkbox-->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxContentForegroundThemeBrush}"/>
        <Setter Property="Padding" Value="2,3,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid VerticalAlignment="Center">
                                <Rectangle x:Name="NormalRectangle"
                                       Fill="{DynamicResource CheckBoxBackgroundThemeBrush}"
                                       Stroke="{DynamicResource CheckBoxBorderThemeBrush}"
                                       StrokeThickness="{DynamicResource CheckBoxBorderThemeThickness}"
                                       UseLayoutRounding="False"
                                       Height="21"
                                       Width="21" />
                                <Path x:Name="CheckGlyph"
                                  Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z"
                                  Fill="{DynamicResource CheckBoxForegroundThemeBrush}"
                                  Height="14"
                                  Stretch="Fill"
                                  Width="16"
                                  Opacity="0"
                                  FlowDirection="LeftToRight" />
                                <Rectangle x:Name="IndeterminateGlyph"
                                       Width="9"
                                       Height="9"
                                       Fill="{DynamicResource CheckBoxForegroundThemeBrush}"
                                       Opacity="0"
                                       UseLayoutRounding="False" />
                                <Rectangle x:Name="FocusVisualWhite"
                                       Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       Width="27"
                                       Height="27" />
                                <Rectangle x:Name="FocusVisualBlack"
                                       Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       Width="27"
                                       Height="27" />
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.Column="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisualWhite" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisualBlack" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateGlyph" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxPointerOverBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxPointerOverBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxPointerOverForegroundThemeBrush}" />
                            <Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxPointerOverForegroundThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxPressedBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxPressedBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxPressedForegroundThemeBrush}" />
                            <Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxPressedForegroundThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxDisabledBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxDisabledBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxDisabledForegroundThemeBrush}" />
                            <Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource CheckBoxContentDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--textbox-->
    <!--re-implement contextmenu to override textbox contextmenu style not applied bug-->
    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdUndo], Mode=OneWay}"
				Command="ApplicationCommands.Undo" />
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdRedo], Mode=OneWay}"
				Command="ApplicationCommands.Redo" />
        <Separator />
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdCut], Mode=OneWay}"
				Command="ApplicationCommands.Cut" />
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdCopy], Mode=OneWay}"
				Command="ApplicationCommands.Copy" />
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdPaste], Mode=OneWay}"
				Command="ApplicationCommands.Paste" />
        <Separator />
        <MenuItem
				Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdSelectAll], Mode=OneWay}"
				Command="ApplicationCommands.SelectAll" />
    </ContextMenu>
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <local:TextCommands x:Key="txtCmd"/>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid>
                                                <Border x:Name="BorderElement"
                                                        BorderBrush="{DynamicResource TextBoxButtonBorderThemeBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                                <Border x:Name="BackgroundElement"
                                                        Background="{DynamicResource TextBoxButtonBackgroundThemeBrush}"
                                                        Margin="{TemplateBinding BorderThickness}">
                                                    <!--<TextBlock x:Name="GlyphElement"
                                                               Margin="1 0"
                                                               Foreground="{DynamicResource TextBoxButtonForegroundThemeBrush}"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               Text="&#xE0A4;"
                                                               FontFamily="{DynamicResource SymbolThemeFontFamily}"/>-->
                                                    <TextBlock x:Name="GlyphElement"
                                                               Text="r" Style="{DynamicResource MarlettGlyph}"
                                                               Margin="1 0"
                                                               Foreground="{DynamicResource TextBoxButtonForegroundThemeBrush}"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               ></TextBlock>
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="BackgroundElement" Property="Background" Value="{DynamicResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
                                                    <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextBoxButtonPointerOverBorderThemeBrush}"/>
                                                    <Setter TargetName="GlyphElement" Property="Foreground" Value="{DynamicResource TextBoxButtonPointerOverForegroundThemeBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter TargetName="BackgroundElement" Property="Background" Value="{DynamicResource TextBoxButtonPressedBackgroundThemeBrush}"/>
                                                    <Setter TargetName="BorderElement" Property="BorderBrush" Value="{DynamicResource TextBoxButtonPressedBorderThemeBrush}"/>
                                                    <Setter TargetName="GlyphElement" Property="Foreground" Value="{DynamicResource TextBoxButtonPressedForegroundThemeBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                Opacity="{DynamicResource TextControlBackgroundThemeOpacity}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="4" 
                                />
                        <Border x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="{DynamicResource TextControlBorderThemeOpacity}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="4" 
                                />

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.LeadingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                        Grid.Column="0" VerticalAlignment="Center"></ContentPresenter>

                        <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      Margin="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}" 
                                      IsTabStop="False" />

                        <Border Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" IsHitTestVisible="False"
                                Grid.Column="1" 
                                x:Name="Watermark"
                                Visibility="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource NullEmptyNotVisible}, ConverterParameter=not}">
                            <TextBlock Text="{Binding Path=(local:TextBoxUI.WatermarkText), RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{DynamicResource TextBoxDisabledForegroundThemeBrush}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       VerticalAlignment="Center"
                                       Margin="3 0"
                                       ></TextBlock>
                        </Border>

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.TrailingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                          Grid.Column="2" VerticalAlignment="Center"></ContentPresenter>

                        <Button x:Name="DeleteButton"
                                Style="{DynamicResource DeleteButtonStyle}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsTabStop="False"
                                Grid.Column="3"
                                DataContext="{StaticResource txtCmd}"
                                Command="{Binding ClearTextCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                VerticalAlignment="Stretch">
                            <Button.Visibility>
                                <MultiBinding Converter="{StaticResource MultiBoolVisible}">
                                    <Binding Path="(local:TextBoxUI.ShowClearButton)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Button.Visibility>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBackgroundThemeOpacity}"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBorderThemeOpacity}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value=".95"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value=".95" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackgroundThemeBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForegroundThemeBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTextBoxNoChrome" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="CaretBrush" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="-2 0"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                Opacity="{DynamicResource TextControlBackgroundThemeOpacity}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="3" 
                                />
                        <Border x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="{DynamicResource TextControlBorderThemeOpacity}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="3" 
                                />

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.LeadingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                        Grid.Column="0" VerticalAlignment="Center"></ContentPresenter>

                        <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      Margin="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}" 
                                      IsTabStop="False" />

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.TrailingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                          Grid.Column="2" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernRichTextBox" TargetType="RichTextBox">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <Grid>
                        <Border x:Name="BackgroundElement"
                            Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                            Grid.ColumnSpan="2"/>
                        <Border x:Name="BorderElement"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                            Grid.ColumnSpan="2"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                  Margin="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}"
                                  IsTabStop="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBackgroundThemeOpacity}"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBorderThemeOpacity}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value=".95"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value=".95" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackgroundThemeBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForegroundThemeBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem
							Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdPaste], Mode=OneWay}"
							Command="ApplicationCommands.Paste" />
                    <Separator />
                    <MenuItem
							Header="{Binding Source={x:Static resx:CommandTextBinder.Current}, Path=[CmdSelectAll], Mode=OneWay}"
							Command="ApplicationCommands.SelectAll" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="3"/>
                        <Border x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="3"/>

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.LeadingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                        Grid.Column="0" VerticalAlignment="Center"></ContentPresenter>

                        <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"
                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                  Margin="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}"
                                  IsTabStop="False" />

                        <Border Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" IsHitTestVisible="False"
                                Grid.Column="1" 
                                x:Name="Watermark"
                                Visibility="{Binding Path=(local:TextBoxUI.HasPassword), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource BoolVisible}, ConverterParameter=not}">
                            <TextBlock Text="{Binding Path=(local:TextBoxUI.WatermarkText), RelativeSource={RelativeSource TemplatedParent}}"
                                       Foreground="{DynamicResource TextBoxDisabledForegroundThemeBrush}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       VerticalAlignment="Center"
                                       Margin="3 0"
                                       ></TextBlock>
                        </Border>

                        <ContentPresenter Content="{Binding Path=(local:TextBoxUI.TrailingElement), RelativeSource={RelativeSource TemplatedParent}}" 
                                          Grid.Column="2" VerticalAlignment="Center"></ContentPresenter>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBackgroundThemeOpacity}"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value="{DynamicResource TextControlPointerOverBorderThemeOpacity}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Opacity" Value=".95"/>
                            <Setter TargetName="BorderElement" Property="Opacity" Value=".95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackgroundThemeBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForegroundThemeBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--progressbar-->
    <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource ProgressBarForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ProgressBarBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ProgressBarBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ProgressBarBorderThemeThickness}"/>
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="{DynamicResource ProgressBarThemeMinHeight}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">

                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">

                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" >
                                <Grid x:Name="Foreground">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                                    <Grid x:Name="Animation" ClipToBounds="true" Visibility="Collapsed">
                                        <Rectangle x:Name="PART_GlowRect" HorizontalAlignment="Left"
											Margin="-100,0,0,0" Width="100" Fill="{DynamicResource ProgressBarIndeterminateForegroundThemeBrush}">
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </Decorator>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Animation" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--combobox-->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Margin" Value="-2 0"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"
							Focusable="false" HorizontalScrollBarVisibility="Hidden"
							VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="InnerGrid">
                            <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                            <Rectangle x:Name="FocusVisualWhite"
                                   Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset=".5" />
                            <Rectangle x:Name="FocusVisualBlack"
                                   Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="1.5" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ComboBoxItemPointerOverBackgroundThemeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="InnerGrid" Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackgroundThemeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Opacity" TargetName="FocusVisualWhite" Value="1" />
                            <Setter Property="Opacity" TargetName="FocusVisualBlack" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="InnerGrid" Property="Background" Value="{DynamicResource ComboBoxItemSelectedDisabledBackgroundThemeBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="InnerGrid" Property="Background" Value="{DynamicResource ComboBoxItemSelectedPointerOverBackgroundThemeBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemPointerOverForegroundThemeBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemSelectedForegroundThemeBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemDisabledForegroundThemeBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemSelectedDisabledForegroundThemeBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemSelectedForegroundThemeBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid x:Name="MainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>


                        <Border x:Name="Background" 
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="HighlightBackground" 
                                SnapsToDevicePixels="True"
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource ComboBoxFocusedBackgroundThemeBrush}"
                                BorderBrush="{DynamicResource ComboBoxFocusedBorderThemeBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Rectangle x:Name="Highlight" 
                                   SnapsToDevicePixels="True"
                                   Fill="{DynamicResource ComboBoxSelectedBackgroundThemeBrush}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="ContentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                        <!--<TextBlock x:Name="DropDownGlyph"
                               Text="&#57361;"
                               Grid.Column="1"
                               IsHitTestVisible="False"
                               Foreground="{DynamicResource ComboBoxArrowForegroundThemeBrush}"
                               FontWeight="Bold"
                               FontSize="{DynamicResource ComboBoxArrowThemeFontSize}"
                               FontFamily="{DynamicResource SymbolThemeFontFamily}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />-->
                        <Path x:Name="DropDownGlyph"
                              Grid.Column="1"
                              Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z"
                              Fill="{DynamicResource ComboBoxArrowForegroundThemeBrush}" HorizontalAlignment="Center"
                              Height="8" Margin="-3 0 0 0" Stretch="Fill" StrokeThickness="0"
                              UseLayoutRounding="False" VerticalAlignment="Center" Width="10" />


                        <ToggleButton Grid.ColumnSpan="2" 
                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      IsTabStop="False" Focusable="False" ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="#01000000"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Border x:Name="EditPart" Padding="{TemplateBinding Padding}"
                                Visibility="Collapsed">
                            <TextBox x:Name="PART_EditableTextBox" Style="{StaticResource ComboBoxEditableTextBox}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                     CaretBrush="{DynamicResource ComboBoxFocusedForegroundThemeBrush}"/>
                        </Border>

                        <Popup x:Name="PART_Popup" AllowsTransparency="true" 
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Border x:Name="PopupBorder"
									MaxHeight="{TemplateBinding MaxDropDownHeight}"
									MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    Background="{DynamicResource ComboBoxPopupBackgroundThemeBrush}"
                                    BorderBrush="{DynamicResource ComboBoxPopupBorderThemeBrush}"
                                    BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}"
                                    HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" Foreground="{DynamicResource ComboBoxPopupForegroundThemeBrush}"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                              >
                                    <ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    </ItemsPresenter>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ComboBoxPointerOverBorderThemeBrush}"/>
                            <Setter TargetName="Highlight" Property="Fill" Value="{DynamicResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="1"/>
                            <Setter TargetName="Highlight" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="PopupBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="EditPart" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="true">
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" Value="false">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource ComboBoxDisabledBackgroundThemeBrush}"/>
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource ComboBoxDisabledBorderThemeBrush}"/>
                            <Setter TargetName="DropDownGlyph" Property="Fill" Value="{DynamicResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledForegroundThemeBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxFocusedForegroundThemeBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--unsorted-->

    <Style x:Key="ModernScrollViewer" TargetType="ScrollViewer">
        <Setter Property="local:Chrome.HScrollOnWheel" Value="True"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" 
                                                CanVerticallyScroll="False" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}" 
                                                Margin="{TemplateBinding Padding}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   AutomationProperties.AutomationId="VerticalScrollBar" 
                                   Grid.Column="1" 
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                   AutomationProperties.AutomationId="HorizontalScrollBar" 
                                   Maximum="{TemplateBinding ScrollableWidth}" 
                                   Orientation="Horizontal" 
                                   Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernScrollBarButton" TargetType="RepeatButton">
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="17" />
        <Setter Property="MinHeight" Value="17" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernBackground4}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernForeground2}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource ModernBackground2}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
							Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernScrollBarThumb" TargetType="Thumb">
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernBackground4}"></Setter>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernForeground2}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource ModernBackground2}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernScrollBar" TargetType="ScrollBar">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="17" />
        <Setter Property="MinWidth"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Bg" Background="{TemplateBinding Background}"
							SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
								IsEnabled="{TemplateBinding IsMouseOver}" BorderThickness="0 0 0 1"
								VerticalContentAlignment="Bottom" Height="33"
								Style="{StaticResource ModernScrollBarButton}">
                            <RepeatButton.Content>
                                <!--<TextBlock Style="{StaticResource MarlettGlyph}" Text="5" />-->
                                <Path
										Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z"
										Fill="{Binding Path=Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=RepeatButton}}"
										HorizontalAlignment="Center" Height="9.673" Margin="0,0,0,7"
										Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False"
										VerticalAlignment="Bottom" Width="10.944" />
                            </RepeatButton.Content>
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true"
								IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
										Style="{StaticResource ModernScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
										Style="{StaticResource ModernScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ModernScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
								IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
								BorderThickness="0 1 0 0" VerticalContentAlignment="Top" Height="33"
								Style="{StaticResource ModernScrollBarButton}">
                            <RepeatButton.Content>
                                <!--<TextBlock Style="{StaticResource MarlettGlyph}" Text="6" />-->
                                <Path
										Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z"
										Fill="{Binding Path=Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=RepeatButton}}"
										HorizontalAlignment="Center" Height="9.673" Margin="0,7,0,0"
										Stretch="Fill" StrokeThickness="0" UseLayoutRounding="False"
										VerticalAlignment="Top" Width="10.944" />

                            </RepeatButton.Content>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg"
									Value="{DynamicResource ModernBackground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="17" />
                <Setter Property="MinHeight"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid x:Name="Bg" Background="{TemplateBinding Background}"
									SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
										IsEnabled="{TemplateBinding IsMouseOver}"
										BorderThickness="0 0 1 0" HorizontalContentAlignment="Right"
										Width="33" Style="{StaticResource ModernScrollBarButton}">
                                    <RepeatButton.Content>
                                        <!--<TextBlock Style="{StaticResource MarlettGlyph}" Text="3" />-->
                                        <Path
												Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z"
												Fill="{Binding Path=Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=RepeatButton}}"
												HorizontalAlignment="Right" Height="10.944"
												Margin="0,0,7,0" Stretch="Fill" StrokeThickness="0"
												UseLayoutRounding="False" VerticalAlignment="Center"
												Width="9.673" />

                                    </RepeatButton.Content>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1"
										IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
												Style="{StaticResource ModernScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
												Command="{x:Static ScrollBar.PageRightCommand}"
												Style="{StaticResource ModernScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ModernScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Grid.Column="2"
										Command="{x:Static ScrollBar.LineRightCommand}"
										IsEnabled="{TemplateBinding IsMouseOver}" Width="33"
										BorderThickness="1 0 0 0" HorizontalContentAlignment="Left"
										Style="{StaticResource ModernScrollBarButton}">
                                    <RepeatButton.Content>
                                        <!--<TextBlock Style="{StaticResource MarlettGlyph}" Text="4" />-->
                                        <Path
												Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z"
												Fill="{Binding Path=Foreground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=RepeatButton}}"
												HorizontalAlignment="Left" Height="10.944"
												Margin="7,0,0,0" Stretch="Fill" StrokeThickness="0"
												UseLayoutRounding="False" VerticalAlignment="Center"
												Width="9.673" />

                                    </RepeatButton.Content>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bg"
											Value="{DynamicResource ModernBackground4}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource AccentForeground}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuPopup" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="StaysOpen" Value="False" />
    </Style>
    <Style x:Key="ContextMenuBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Padding" Value="0 4" />
    </Style>

    <Style x:Key="ModernContextMenu" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Padding" Value="0 4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
                        <ScrollViewer CanContentScroll="True"
								Style="{DynamicResource ModernMenuScrollViewer}">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
									Margin="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style x:Key="ModernMenuScrollButton" TargetType="RepeatButton">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                        <Rectangle x:Name="R1" DockPanel.Dock="Right" Fill="Transparent" Width="1" />
                        <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Fill="Transparent" Height="1" />
                        <Rectangle x:Name="L1" DockPanel.Dock="Left" Fill="Transparent" Width="1" />
                        <Rectangle x:Name="T1" DockPanel.Dock="Top" Fill="Transparent" Height="1" />
                        <ContentPresenter x:Name="ContentContainer" HorizontalAlignment="Center"
								Margin="2,2,2,2" VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="R1"
									Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter Property="Fill" TargetName="B1"
									Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter Property="Fill" TargetName="L1"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter Property="Fill" TargetName="T1"
									Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style x:Key="ModernMenuScrollViewer" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Grid.Column="0"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false"
								Grid.Row="0" Style="{StaticResource ModernMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0"
										Converter="{StaticResource MenuScrollingVisibilityConverter}"
										FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}"
									Fill="{DynamicResource ModernForeground}" />
                        </RepeatButton>
                        <RepeatButton Grid.Column="0"
								CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
								Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false"
								Grid.Row="2" Style="{StaticResource ModernMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100"
										Converter="{StaticResource MenuScrollingVisibilityConverter}"
										FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight"
											RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}"
									Fill="{DynamicResource ModernForeground}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ModernSubmenuContentTemplate" TargetType="ContentControl">
        <Border BorderBrush="{DynamicResource ModernForeground3}" BorderThickness="2" Padding="0 4"
				Background="{DynamicResource ModernBackground}">
            <ContentPresenter />
            <!--<Grid>
					<ContentPresenter Grid.ColumnSpan="2" />
				</Grid>-->
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernTopLevelHeaderTemplate" TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2" />
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1" RadiusY="1"
					RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <Rectangle x:Name="InnerBorder" Margin="2" />
            <DockPanel>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center" />
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}"
						Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
						Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" />
                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false"
					HorizontalOffset="1"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					Placement="Bottom" VerticalOffset="-1">
                <ContentControl x:Name="SubMenuBorder" IsTabStop="false"
						Template="{DynamicResource ModernSubmenuContentTemplate}">
                    <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true"
							Style="{DynamicResource ModernMenuScrollViewer}">
                        <Grid>
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
									Width="0">
                                <Rectangle
										Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
										Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									Grid.IsSharedSizeScope="true" Margin="2"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									KeyboardNavigation.TabNavigation="Cycle" />
                        </Grid>
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
				<Setter Property="Color" TargetName="Shdw" Value="#71000000" />
			</Trigger>-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#90717070" />
                <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF" />
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--<Setter Property="Stroke" TargetName="Bg" Value="#E0717070" />-->
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource ModernBackground3}" />
                <!--<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272" />-->
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <!--<Setter Property="Stroke" TargetName="Bg" Value="#E0717070" />-->
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource ModernBackground3}" />
                <!--<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272" />-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernTopLevelItemTemplate" TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="OuterBorder" />
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" Margin="1"
					Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <Rectangle x:Name="InnerBorder" Margin="2" />
            <DockPanel>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center" />
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}"
						Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
						Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center" />
                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}"
						RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Stroke" TargetName="Bg" Value="#90717070" />
                <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF" />
                <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--<Setter Property="Stroke" TargetName="Bg" Value="#E0717070" />-->
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource ModernBackground3}" />
                <!--<Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272" />-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernSubmenuHeaderTemplate" TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup"
							Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center" />
                <Border x:Name="GlyphPanel" Height="22" Margin="1" Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="{StaticResource Checkmark}"
							Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
							Height="11" Width="9" />
                </Border>
                <ContentPresenter Grid.Column="2" ContentSource="Header"
						Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}"
						Text="{TemplateBinding InputGestureText}" Visibility="Collapsed" />
                <Path Grid.Column="5" Data="{StaticResource RightArrow}"
						Fill="{TemplateBinding Foreground}" Margin="4,0,0,0"
						VerticalAlignment="Center" />
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false"
					HorizontalOffset="-2"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					Placement="Right" VerticalOffset="-3">
                <ContentControl x:Name="SubMenuBorder" IsTabStop="false"
						Template="{DynamicResource ModernSubmenuContentTemplate}">
                    <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true"
							Style="{DynamicResource ModernMenuScrollViewer}">
                        <Grid>
                            <!--<Canvas HorizontalAlignment="Left" Height="0"
										VerticalAlignment="Top" Width="0">
									<Rectangle
											Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
											Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
								</Canvas>-->
                            <ItemsPresenter x:Name="ItemsPresenter"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									Grid.IsSharedSizeScope="true"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									KeyboardNavigation.TabNavigation="Cycle" />
                        </Grid>
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource ModernBackground3}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                <Setter Property="Fill" TargetName="Glyph" Value="#848589" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ModernSubmenuItemTemplate" TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"
					Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <!--<Rectangle x:Name="InnerBorder" Margin="1" RadiusY="2" RadiusX="2" />-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup"
							Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="1"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="Center" />
                <Border x:Name="GlyphPanel" Height="22" Margin="1" Visibility="Hidden" Width="22">
                    <Path x:Name="Glyph" Data="{StaticResource Checkmark}"
							Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"
							Height="11" Width="9" />
                </Border>
                <ContentPresenter Grid.Column="2" ContentSource="Header"
						Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}"
						Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource ModernBackground3}" />
                <!--<Setter Property="Stroke" TargetName="Bg" Value="#8071CBF1"/>
					<Setter Property="Stroke" TargetName="InnerBorder" Value="#40FFFFFF"/>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                <!--<Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
					<Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>-->
                <Setter Property="Fill" TargetName="Glyph" Value="#848589" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ModernMenuItem" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment"
				Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
				Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Template" Value="{DynamicResource ModernSubmenuItemTemplate}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3" />
                <Setter Property="Template" Value="{DynamicResource ModernTopLevelHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3" />
                <Setter Property="Template" Value="{DynamicResource ModernTopLevelItemTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="0 6" />
                <Setter Property="Template" Value="{DynamicResource ModernSubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="0 6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernSeparator" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" Height="1"
							SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid SnapsToDevicePixels="true" Margin="0,6,0,4">
                        <Rectangle Height="1" Margin="30,0,1,1"
								Fill="{DynamicResource ModernForeground4}" />
                        <!--<Rectangle Height="1" Margin="30,1,1,0" Fill="White" />-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ModernListBox" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="ModernListView" TargetType="ListView">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="ModernListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="4" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Margin="{TemplateBinding Margin}"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" UseLayoutRounding="True"
							SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent9}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Padding" Value="4" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Margin="{TemplateBinding Margin}"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" UseLayoutRounding="True"
							SnapsToDevicePixels="True">
                        <GridViewRowPresenter
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent9}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernGridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height"
				Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ModernForeground4}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="1"
								Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernGridViewColumnHeader" TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground4}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="8 2" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="HeaderBorder" BorderThickness="0,1,0,1"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter Name="HeaderContent" Margin="0,0,0,1"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											RecognizesAccessKey="True"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Border Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0" />
                        <Border Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1" />
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
									Style="{StaticResource ModernGridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background"
									Value="{DynamicResource ModernAccent9}" />
                            <Setter TargetName="PART_HeaderGripper" Property="Background"
									Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background"
									Value="{DynamicResource ModernAccent5}" />
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility"
									Value="Hidden" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.4082" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697" Fill="#FF000000"
										Width="{TemplateBinding ActualWidth}"
										Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder" BorderThickness="0,1,0,1"
									BorderBrush="{TemplateBinding BorderBrush}"
									Background="{TemplateBinding Background}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="ModernTabItem" TargetType="TabItem">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>-->
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header"
									HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <!--<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
						</MultiTrigger>-->
                        <!--<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
						</Trigger>-->
                        <!--<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-2,-1"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-1,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-2,-2,-1,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1,-2,-2,-2"/>
							<Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
						</MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTabControl" TargetType="TabControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ModernTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true"
							KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="HeaderPanel" Grid.Column="0" Grid.Row="0"
								IsHitTestVisible="True" Background="Transparent" Margin="30 0 0 0"
								HorizontalAlignment="Left">
                            <TabPanel IsItemsHost="true" KeyboardNavigation.TabIndex="1"
									Panel.ZIndex="1">
                            </TabPanel>
                        </Border>
                        <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}"
								Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained"
								Grid.Row="1" Background="{TemplateBinding Background}"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local">

                            <ContentPresenter x:Name="PART_SelectedContentHost"
									ContentSource="SelectedContent"
									Margin="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--implicits have to be set in this resource file or design time won't work?-->

    <Style TargetType="TextBlock" BasedOn="{StaticResource ModernTextBlock}"/>

    <Style TargetType="Label" BasedOn="{StaticResource ModernLabel}"></Style>

    <Style TargetType="Button" BasedOn="{StaticResource ModernButton}"></Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource ModernToggleButton}"></Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource ModernRadioButton}"></Style>

    <Style TargetType="RepeatButton" BasedOn="{StaticResource ModernRepeatButton}"></Style>

    <Style TargetType="StatusBar" BasedOn="{StaticResource ModernStatusBar}"/>

    <Style TargetType="StatusBarItem" BasedOn="{StaticResource ModernStatusBarItem}"/>

    <Style TargetType="ToolTip" BasedOn="{StaticResource ModernToolTip}"></Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource ModernCheckBox}"></Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource ModernTextBox}"></Style>

    <Style TargetType="RichTextBox" BasedOn="{StaticResource ModernRichTextBox}"></Style>

    <Style TargetType="PasswordBox" BasedOn="{StaticResource ModernPasswordBox}"></Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource ModernComboBox}"></Style>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ModernComboBoxItem}"></Style>

    <Style TargetType="ProgressBar" BasedOn="{StaticResource ModernProgressBar}"/>

    <Style TargetType="ScrollBar" BasedOn="{StaticResource ModernScrollBar}"/>

    <Style TargetType="ScrollViewer" BasedOn="{StaticResource ModernScrollViewer}"/>

    <Style TargetType="MenuItem" BasedOn="{StaticResource ModernMenuItem}"/>

    <Style TargetType="Separator" BasedOn="{StaticResource ModernSeparator}"/>

    <Style TargetType="ContextMenu" BasedOn="{StaticResource ModernContextMenu}" />

    <Style TargetType="ListBox" BasedOn="{StaticResource ModernListBox}" />

    <Style TargetType="ListView" BasedOn="{StaticResource ModernListView}" />

</ResourceDictionary>